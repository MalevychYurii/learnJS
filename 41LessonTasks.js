// 1. let x = 5;
// alert( x++ ); // 5

// 2. console.log([ ] + false - null + true); // NaN
//    1) [] + false = "false"
//    2) "false" - null = NaN
//    3) Nan + true = Nan

// 3. let y = 1;
// let x = y = 2;
// alert(x); // 2

// 4. [ ] + 1 + 2. // 12

// 5. alert( "1"[0] ) // 1. [0] - звернення по індексу елементу рядку

// 6. 2 && 1 && null && 0 && undefined // null

// 7. !!( 1 && 2) == (1 && 2) // false. Це пояснюється тим, що !!(1 && 2) перетворює результат на булеве значення, тоді як (1 && 2) залишає його початковим.

// 8. alert( null || 2 && 3 || 4 ); // 3

// 9. const a = [1, 2, 3];
// const b = [1, 2, 3];

// (a == b)? // false при порівнянні масивів або інших об'єктів оператори == та === порівнюють не вміст об'єктів,
// а їхні посилання (адреси в пам'яті).
// Навіть якщо два масиви мають однаковий вміст, вони є різними об'єктами в пам'яті.

// 10. alert( +"Infinity" ); // Infinity. Type: number

// 11. "Ёжик" > "яблоко"? // Взагалі false, але треба дивитись таблицю символів Unicode

// 12. 0 || "" || 2 || undefined || true || falsе  // 2 